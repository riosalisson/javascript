Boas práticas na programação:

1) Documentação
/**
* Descrição do código (o que faz?)
* @author Nome do autor do código
* @link https://...
*/

2) Código limpo
   - Não abusar de comentários

3) Nomeação:
   - Não usar caracteres especiais, espaço e acentos
   - Nomes de arquivos, variáveis e funções, devem ser escritos com a primeira letra em caixa baixa (letra minúscula), iniciar com caixa alta (letra maiúscula) apenas em classes modelos.
   - Definir nomes que tenha relação com o arquivo/problema.

4) Alinhamento (identificação do código)

5) Quanto menos código usado para resolver o problema, melhor!
_________________________________________________________________
comandos de terminal

cls ou clear (limpar a tela do terminal)
node -v (exibe a versão do node)
cd pasta (entrar na pasta)
cd .. ou cd.. (voltar um nível)
dir ou ls (listar os arquivos e diretórios)
node arquivo.js (executar um arquivo JavaScript)
seta para cima (repete os comandos)
<tab> completa os comandos

_________________________________________________________________
JavaScript:

Características:
- Sentenças e não linhas de códigos
- ; é opcional
console.clear() //limpar a tela do console
console.log() //escrever no console
// comentários de linha
Podemos usar aspas "" "" ou ' '
Não podemos usar aspas diferentes " ' ou ' "
Dica: Usar em "textos" aspas
      Usar em bibliotecas ou caminhos 'apóstrofo'

-_________________________________________________________________
Operadores:

Observações:
- Regra de precedência
- % (não calcula porcentagem e sim o resto da divisão)
Ex:

Comparadores de igualdade:
NÃO USAR == !=

Operadores lógicos:
Dica:
professorjosedeassis.github.io/simulador

_________________________________________________________________

Estudo das variáveis
- String (caracteres)
- Numéricas (números)
- Booleanas (verdadeiro ou falso)

OBS: No JS as variáveis são dinamicamente tipadas
const (criar uma constante)
var ou let (criar uma variável)
ATENÇÃO!!!!! Não usar jamais o var

Configurando o git
- Instalar o git
Abrir o git bash
git config --global user.name "seu nome"
git config --global user.email "seu email github"

git clone link_do_repositório (clonar o repositório na máquina local)

git status (verfica o status do repositório local em relação ao GitHub)

Obsevação: digitar os comandos na raiz do repositório
git add . (adiciona todas as alterações)
git commit -m "descrição das alterações"