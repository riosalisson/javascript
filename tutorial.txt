Boas práticas na programação:

1) Documentação
/**
* Descrição do código (o que faz?)
* @author Nome do autor do código
* @link https://...
*/

2) Código limpo
   - Não abusar de comentários

3) Nomeação:
   - Não usar caracteres especiais, espaço e acentos
   - Nomes de arquivos, variáveis e funções, devem ser escritos com a primeira letra em caixa baixa (letra minúscula), iniciar com caixa alta (letra maiúscula) apenas em classes modelos.
   - Definir nomes que tenha relação com o arquivo/problema.

4) Alinhamento (identificação do código)

5) Quanto menos código usado para resolver o problema, melhor!
_________________________________________________________________
comandos de terminal

cls ou clear (limpar a tela do terminal)
node -v (exibe a versão do node)
cd pasta (entrar na pasta)
cd .. ou cd.. (voltar um nível)
dir ou ls (listar os arquivos e diretórios)
node arquivo.js (executar um arquivo JavaScript)
seta para cima (repete os comandos)
<tab> completa os comandos

_________________________________________________________________
JavaScript:

Características:
- Sentenças e não linhas de códigos
- ; é opcional
console.clear() //limpar a tela do console
console.log() //escrever no console
// comentários de linha
Podemos usar aspas "" "" ou ' '
Não podemos usar aspas diferentes " ' ou ' "
Dica: Usar em "textos" aspas
      Usar em bibliotecas ou caminhos 'apóstrofo'

-_________________________________________________________________
Operadores:

Observações:
- Regra de precedência
- % (não calcula porcentagem e sim o resto da divisão)
Ex:

Comparadores de igualdade:
NÃO USAR == !=

Operadores lógicos:
Dica:
professorjosedeassis.github.io/simulador

_________________________________________________________________

Estudo das variáveis
- String (caracteres)
- Numéricas (números)
- Booleanas (verdadeiro ou falso)

OBS: No JS as variáveis são dinamicamente tipadas
const (criar uma constante)
var ou let (criar uma variável)
ATENÇÃO!!!!! Não usar jamais o var

Tipagem dnâmica
No JavaScript o tipo string é definido quando o conteúdo da variável estiver entre aspas ""

Variáveis numéricas podem ser números inteiros e não inteiros
OBS: , (vírgula é um caactere e não número), se necessário converter a entrada de dados de "," para "."
.replace(",",".")

Na entrada de dados numéricos via terminal ou fomulário é necessário converter para números
class Number

Configurando o git
- Instalar o git
Abrir o git bash
git config --global user.name "seu nome"
git config --global user.email "seu email github"

git clone link_do_repositório (clonar o repositório na máquina local)

git status (verfica o status do repositório local em relação ao GitHub)

Obsevação: digitar os comandos na raiz do repositório
git add . (adiciona todas as alterações)
git commit -m "descrição das alterações"
git push

_________________________________________________________________
Node - Plataforma para uso do JS fora do navegador
|__ V8 (google chromium)
|__ bibliotecas C / C++
|__ pacotes npm (node packager manager)
npm ls (lista os pacotes)
npm i ou npm install (instala um pacote)
npm r noe_do_pacote (remove o pacote)

Pacote = Modulo = bibliotecas
Para usar um pacote é necessário fazer a importação no início do código (logo abaixo do cabeçalho de documentação)

Algorítmo: "receita de bolo"

Exemplo 1:
Objetivo: calcular a média de 2 notas
         nota 1 + nota 2
média = _________________
                2
variáveis: nota1,nota2,media

Entrada: nota1,nota2
Processamento: media = (nota1 + nota2) / 2
Saída: media

_________________________________________________________________
Exemplo 2:
Desenvolver um app modo console para cáculo de porcentagem:
Ex: 10% de 200 = 20

200 ------------ 100%
valor ----------  10%

valor x 100 = 200 x 10

         200 x 10                2000
valor = __________     valor = ______     valor = 20
            100                  100

_________________________________________________________________

y ------------ 100%
valor ----------  x

valor * 100 = y * x

         y * x                2000
valor = __________     valor = ______     valor = 20
            100                  100


Exercício 1:
Desenvolver um app em modo console para calcular o valor do desconto?
Ex:
valor total: 200.00
desconto: 5%
total com desconto: 190.00

valor com desconto = valor total - desconto

//variáveis
let total, desconto, totalDesconto

//entrada
total, desconto


Exercício 2: Desenvolver um app no console para conversão de moeda (real para euro)

Resolução:
cotação da moeda: 5.89

//variáveis
let real, euro, conversao

//processamento
total - real / euro

//Saída
total
_________________________________________________________________

5) Converter a temperatura de Fahrenheit para Celsius

//variáveis
f, conversao

//entrada
f

//processamento
conversao = 5/9 * (f-32)

//Saída
valor